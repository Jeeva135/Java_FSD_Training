-- SQLBook: Code
create database lms;

-- SQLBook: Code
USE LMS;
-- SQLBook: Code
CREATE TABLE IF NOT EXISTS COURSES
(
    COURSE_ID VARCHAR(10),
    COURSE_NAME VARCHAR(50),
    COURSE_DURATION INT
);
-- SQLBook: Code
CREATE TABLE IF NOT EXISTS TOPICS 
(
    TOPIC_ID VARCHAR(10),
    TOPIC_NAME VARCHAR(50),
    TOPIC_DURATION INT,
    TOPIC_DESC VARCHAR(100)
);
​
-- SQLBook: Code
CREATE TABLE IF NOT EXISTS COURSE_TOPICS
(
    COURSE_ID VARCHAR(10),
    TOPIC_ID VARCHAR(10)
);
-- SQLBook: Code
ALTER TABLE COURSES ADD CONSTRAINT  COURSE_PK PRIMARY KEY (COURSE_ID);
-- SQLBook: Code
ALTER TABLE TOPICS ADD CONSTRAINT TOPIC_PK PRIMARY KEY (TOPIC_ID);
-- SQLBook: Code
desc topics;
-- SQLBook: Code
ALTER TABLE COURSE_TOPICS ADD CONSTRAINT COURSE_FK FOREIGN KEY (COURSE_ID) REFERENCES COURSES(COURSE_ID);
-- SQLBook: Code
use lms;
-- SQLBook: Code
drop table topics;
-- SQLBook: Code
ALTER TABLE COURSE_TOPICS ADD CONSTRAINT TOPIC_FK FOREIGN KEY (TOPIC_ID) REFERENCES TOPICS(TOPIC_ID);
-- SQLBook: Code
CREATE TABLE IF NOT EXISTS MENTORS 
(
    MENTOR_ID VARCHAR(10),
    MENTOR_NAME VARCHAR(50),
    MENTOR_EMAIL VARCHAR(50),
    MENTOR_PHONE VARCHAR(10),
    CONSTRAINT MENTOR_PK PRIMARY KEY (MENTOR_ID)
);
-- SQLBook: Code
CREATE TABLE IF NOT EXISTS STUDENTS 
(
    STUDENT_ID VARCHAR(10) PRIMARY KEY,
    STUDENT_NAME VARCHAR(50),
    STUDENT_EMAIL VARCHAR(50),
    STUDENT_PHONE VARCHAR(10)
);
​
-- SQLBook: Code
ALTER TABLE MENTORS ADD CONSTRAINT MENTOR_EMAIL_UK UNIQUE (MENTOR_EMAIL);
-- SQLBook: Code
ALTER TABLE STUDENTS ADD CONSTRAINT STUDENT_EMAIL_UK UNIQUE (STUDENT_EMAIL);
-- SQLBook: Code
ALTER TABLE STUDENTS ADD COLUMN GENDER CHAR(1) AFTER STUDENT_NAME;
-- SQLBook: Code
ALTER TABLE STUDENTS ADD CONSTRAINT GENDER_STUDENT_CK CHECK (GENDER IN ('M','F'));
-- SQLBook: Code
ALTER TABLE MENTORS ADD COLUMN GENDER CHAR(1) AFTER MENTOR_NAME;
-- SQLBook: Code
ALTER TABLE MENTORS ADD CONSTRAINT MENTOR_GENDER_CK CHECK (GENDER IN ('M','F'));